# smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
	| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-Left if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n M-Down if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n M-Up if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n M-Right if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n M-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind -n M-B run "(tmux display-message -p '#{pane_current_command}' | grep -iq emacs && tmux send-keys M-B) || tmux select-pane -L"
bind -n M-F run "(tmux display-message -p '#{pane_current_command}' | grep -iq emacs && tmux send-keys M-F) || tmux select-pane -R"
bind -n M-P run "(tmux display-message -p '#{pane_current_command}' | grep -iq emacs && tmux send-keys M-P) || tmux select-pane -U"
bind -n M-N run "(tmux display-message -p '#{pane_current_command}' | grep -iq emacs && tmux send-keys M-N) || tmux select-pane -D"

set -s escape-time 0
set -g default-terminal "screen-256color"

# use backtick as prefix. type `` to type a `
# unbind C-b
# set -g prefix `
# bind-key ` send-prefix
# set -g prefix C-x

# vim-style keys for copy mode
# set-window-option -g mode-keys emacs
# bind-key -T vi-copy 'v' begin-selection
# bind-key -T vi-copy 'y' copy-selection

# need focus events on for vim
set -g focus-events on

# copy to clipboard
# unbind-key -T emacs-copy C-c
# bind-key -T emacs-copy C-c copy-pipe pbcopy

# mouse one by default
set -g mouse on
